{"ast":null,"code":"var _jsxFileName = \"/Users/alnura/Desktop/My Projects/bookstore/src/pages/books/Books.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedBooks = JSON.parse(localStorage.getItem('allBooks'));\n    if (savedBooks && savedBooks.length > 0) {\n      // если книги уже сохранены, используем их\n      setBooks(savedBooks);\n      setLoading(false);\n    } else {\n      // если нет — загружаем из API один раз\n      fetch(`https://openlibrary.org/search.json?q=books&limit=40`).then(res => res.json()).then(data => {\n        const formattedBooks = data.docs.map(book => ({\n          key: book.key,\n          title: book.title,\n          author: book.author_name ? book.author_name[0] : 'Unknown Author',\n          image: book.cover_i ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg` : 'https://via.placeholder.com/150x220?text=No+Cover',\n          price: Math.floor(Math.random() * 30) + 10,\n          rating: Math.floor(Math.random() * 5) + 1\n        }));\n        localStorage.setItem('allBooks', JSON.stringify(formattedBooks));\n        setBooks(formattedBooks);\n        setLoading(false);\n      }).catch(() => setLoading(false));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"books-page\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"books-grid\",\n      children: books.slice(0, 20).map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        image: book.image,\n        rating: book.rating,\n        title: book.title,\n        author: book.author,\n        price: book.price\n      }, book.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"ChkvWGV9GOBJOq4oIXyrg5ci6S0=\");\n_c = Books;\nexport default Books;\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\"; \n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const results = data.docs.slice(0, 5).map((book) => ({\n//           id: book.key,\n//           title: book.title,\n//           author: book.author_name ? book.author_name[0] : \"Unknown Author\",\n//           cover: book.cover_i\n//             ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//             : \"https://via.placeholder.com/150x220?text=No+Cover\",\n//           price: (Math.random() * (30 - 10) + 10).toFixed(2),\n//           rating: Math.floor(Math.random() * 5) + 1,\n//         }));\n//         setBooks(results);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   if (loading) return <p className=\"loading\">Loading books...</p>;\n//   if (error) return <p className=\"error\">Error: {error}</p>;\n\n//   return (\n//     <main className=\"books-page\">\n//       <div className=\"books\">\n//         {books.map((book) => (\n//           <BookCard\n//             key={book.id}\n//             image={book.cover}\n//             rating={book.rating}\n//             title={book.title}\n//             author={book.author}\n//             price={book.price}\n//           />\n//         ))}\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useState","useEffect","BookCard","jsxDEV","_jsxDEV","Books","_s","books","setBooks","loading","setLoading","savedBooks","JSON","parse","localStorage","getItem","length","fetch","then","res","json","data","formattedBooks","docs","map","book","key","title","author","author_name","image","cover_i","price","Math","floor","random","rating","setItem","stringify","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","_c","$RefreshReg$"],"sources":["/Users/alnura/Desktop/My Projects/bookstore/src/pages/books/Books.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\n\nconst Books = () => {\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const savedBooks = JSON.parse(localStorage.getItem('allBooks'));\n\n    if (savedBooks && savedBooks.length > 0) {\n      // если книги уже сохранены, используем их\n      setBooks(savedBooks);\n      setLoading(false);\n    } else {\n      // если нет — загружаем из API один раз\n      fetch(`https://openlibrary.org/search.json?q=books&limit=40`)\n        .then((res) => res.json())\n        .then((data) => {\n          const formattedBooks = data.docs.map((book) => ({\n            key: book.key,\n            title: book.title,\n            author: book.author_name ? book.author_name[0] : 'Unknown Author',\n            image: book.cover_i\n              ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n              : 'https://via.placeholder.com/150x220?text=No+Cover',\n            price: Math.floor(Math.random() * 30) + 10,\n            rating: Math.floor(Math.random() * 5) + 1,\n          }));\n\n          localStorage.setItem('allBooks', JSON.stringify(formattedBooks));\n          setBooks(formattedBooks);\n          setLoading(false);\n        })\n        .catch(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <main className=\"books-page\">\n      {loading ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <section className=\"books-grid\">\n          {books.slice(0, 20).map((book) => (\n            <BookCard\n              key={book.key}\n              image={book.image}\n              rating={book.rating}\n              title={book.title}\n              author={book.author}\n              price={book.price}\n            />\n          ))}\n        </section>\n      )}\n    </main>\n  );\n};\n\nexport default Books;\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\"; \n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const results = data.docs.slice(0, 5).map((book) => ({\n//           id: book.key,\n//           title: book.title,\n//           author: book.author_name ? book.author_name[0] : \"Unknown Author\",\n//           cover: book.cover_i\n//             ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//             : \"https://via.placeholder.com/150x220?text=No+Cover\",\n//           price: (Math.random() * (30 - 10) + 10).toFixed(2),\n//           rating: Math.floor(Math.random() * 5) + 1,\n//         }));\n//         setBooks(results);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   if (loading) return <p className=\"loading\">Loading books...</p>;\n//   if (error) return <p className=\"error\">Error: {error}</p>;\n\n//   return (\n//     <main className=\"books-page\">\n//       <div className=\"books\">\n//         {books.map((book) => (\n//           <BookCard\n//             key={book.id}\n//             image={book.cover}\n//             rating={book.rating}\n//             title={book.title}\n//             author={book.author}\n//             price={book.price}\n//           />\n//         ))}\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Books;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}