{"ast":null,"code":"var _jsxFileName = \"/Users/alnura/Desktop/My Projects/bookstore/src/pages/favorites/Favorites.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Favorites = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const loadFavorites = () => {\n    const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(saved);\n  };\n  useEffect(() => {\n    loadFavorites();\n    const handleUpdate = () => loadFavorites();\n    window.addEventListener('favoritesUpdated', handleUpdate);\n    return () => {\n      window.removeEventListener('favoritesUpdated', handleUpdate);\n    };\n  }, []);\n  const toggleSelect = title => {\n    setSelected(prev => prev.includes(title) ? prev.filter(t => t !== title) : [...prev, title]);\n  };\n\n  // const removeFavorite = (title) => {\n  //     const updated = favorites.filter((book) => book.title !== title);\n  //     setFavorites(updated);\n  //     localStorage.setItem('favorites', JSON.stringify(updated));\n  //     window.dispatchEvent(new Event('favoritesUpdated'));\n  // };\n\n  const selectAll = () => {};\n  const removeSelected = () => {\n    const updated = favorites.filter(book => !selected.includes(book.title));\n    setFavorites(updated);\n    setSelected([]);\n    localStorage.setItem('favorites', JSON.stringify(updated));\n    window.dispatchEvent(new Event('favoritesUpdated'));\n  };\n  const clearAll = () => {\n    localStorage.removeItem('favorites');\n    setFavorites([]);\n    setSelected([]);\n    window.dispatchEvent(new Event('favoritesUpdated'));\n  };\n  const unselectAll = () => {\n    setSelected([]);\n  };\n  const addSelectedToCart = () => {\n    const selectedBooks = favorites.filter(book => selected.includes(book.title));\n    const existingCart = JSON.parse(localStorage.getItem('cart')) || [];\n    const updatedCart = [...existingCart, ...selectedBooks.filter(book => !existingCart.some(item => item.title === book.title))];\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n    window.dispatchEvent(new Event('cartUpdated'));\n    alert(`${selectedBooks.length} book(s) added to cart ðŸ›’`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"favorites-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"favorites-title\",\n      children: \"My Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), favorites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"favorites-empty\",\n      children: \"No books added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-actions\",\n        children: selected.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn add-to-cart\",\n            onClick: addSelectedToCart,\n            children: [\"Add Selected to Cart (\", selected.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn unselect-all\",\n            onClick: unselectAll,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn clear-all\",\n          onClick: clearAll,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-grid\",\n        children: favorites.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `favorite-item ${selected.includes(book.title) ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-checkbox\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selected.includes(book.title),\n              onChange: () => toggleSelect(book.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BookCard, {\n            image: book.image,\n            title: book.title,\n            author: book.author,\n            price: book.price,\n            rating: book.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, book.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Favorites, \"ZWM3Pzm4FKCVFGMdphgXp+iK4Jc=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useEffect","useState","BookCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Favorites","_s","favorites","setFavorites","selected","setSelected","loadFavorites","saved","JSON","parse","localStorage","getItem","handleUpdate","window","addEventListener","removeEventListener","toggleSelect","title","prev","includes","filter","t","selectAll","removeSelected","updated","book","setItem","stringify","dispatchEvent","Event","clearAll","removeItem","unselectAll","addSelectedToCart","selectedBooks","existingCart","updatedCart","some","item","alert","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","checked","onChange","image","author","price","rating","_c","$RefreshReg$"],"sources":["/Users/alnura/Desktop/My Projects/bookstore/src/pages/favorites/Favorites.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\n\nconst Favorites = () => {\n    const [favorites, setFavorites] = useState([]);\n    const [selected, setSelected] = useState([]);\n\n    const loadFavorites = () => {\n        const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n        setFavorites(saved);\n    };\n\n    useEffect(() => {\n        loadFavorites();\n\n        const handleUpdate = () => loadFavorites();\n        window.addEventListener('favoritesUpdated', handleUpdate);\n\n        return () => {\n            window.removeEventListener('favoritesUpdated', handleUpdate);\n        };\n    }, []);\n\n    const toggleSelect = (title) => {\n        setSelected((prev) =>\n            prev.includes(title)\n            ? prev.filter((t) => t !== title)\n            : [...prev, title]\n        );\n    };\n\n    // const removeFavorite = (title) => {\n    //     const updated = favorites.filter((book) => book.title !== title);\n    //     setFavorites(updated);\n    //     localStorage.setItem('favorites', JSON.stringify(updated));\n    //     window.dispatchEvent(new Event('favoritesUpdated'));\n    // };\n\n    const selectAll = () => {\n        \n    }\n\n    const removeSelected = () => {\n        const updated = favorites.filter((book) => !selected.includes(book.title));\n        setFavorites(updated);\n        setSelected([]);\n        localStorage.setItem('favorites', JSON.stringify(updated));\n        window.dispatchEvent(new Event('favoritesUpdated'));\n    }; \n    \n    const clearAll = () => {\n        localStorage.removeItem('favorites');\n        setFavorites([]);\n        setSelected([]);\n        window.dispatchEvent(new Event('favoritesUpdated'));\n    };\n\n    const unselectAll = () => {\n        setSelected([]);\n    };\n\n    const addSelectedToCart = () => {\n        const selectedBooks = favorites.filter((book) =>\n            selected.includes(book.title)\n        );\n\n        const existingCart = JSON.parse(localStorage.getItem('cart')) || [];\n\n        const updatedCart = [\n            ...existingCart,\n            ...selectedBooks.filter(\n                (book) => !existingCart.some((item) => item.title === book.title)\n            ),\n        ];\n\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\n        window.dispatchEvent(new Event('cartUpdated'));\n        alert(`${selectedBooks.length} book(s) added to cart ðŸ›’`);\n    };\n\n    return (\n        <main className=\"favorites-page\">\n            <h1 className=\"favorites-title\">My Favorites</h1>\n\n            {favorites.length === 0 ? (\n                <p className=\"favorites-empty\">No books added yet.</p>\n            ) : (\n            <>\n                <div className=\"favorites-actions\">\n                    {selected.length > 0 ? (\n                        <>\n                            <button className=\"btn add-to-cart\" onClick={addSelectedToCart}>\n                                Add Selected to Cart ({selected.length})\n                            </button>\n                            <button className=\"btn unselect-all\" onClick={unselectAll}>\n                                Cancel\n                            </button>\n                            </>\n                        ) : (\n                            <button className=\"btn clear-all\" onClick={clearAll}>\n                                Clear All\n                            </button>\n                    )}\n                </div>\n\n                <div className=\"favorites-grid\">\n                    {favorites.map((book) => (\n                        <div\n                            key={book.title}\n                            className={`favorite-item ${\n                                selected.includes(book.title) ? 'selected' : ''\n                            }`}\n                        >\n                            <div className=\"favorite-checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selected.includes(book.title)}\n                                    onChange={() => toggleSelect(book.title)}\n                                />\n                            </div>\n                            <BookCard\n                                image={book.image}\n                                title={book.title}\n                                author={book.author}\n                                price={book.price}\n                                rating={book.rating}\n                            />\n                        </div>\n                    ))}\n                </div>\n            </>\n        )}\n    </main>\n  );\n};\n\nexport default Favorites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}