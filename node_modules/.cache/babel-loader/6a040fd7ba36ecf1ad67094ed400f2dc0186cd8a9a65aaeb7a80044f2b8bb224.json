{"ast":null,"code":"var _jsxFileName = \"/Users/alnura/Desktop/My Projects/bookstore/src/pages/books/Books.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n// import './style.css';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\";\n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setBooks(data.docs);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   return (\n//     <main className=\"books-page\">\n//       {loading ? (\n//         <div className=\"loader\"></div>\n//       ) : error ? (\n//         <p className=\"error\">Error: {error}</p>\n//       ) : (\n//         <section className=\"books-grid\">\n//           {books.slice(0, 20).map((book) => (\n//             <BookCard\n//               key={book.key}\n//               image={\n//                 book.cover_i\n//                   ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//                   : \"https://via.placeholder.com/150x220?text=No+Cover\"\n//               }\n//               rating={Math.floor(Math.random() * 5) + 1}\n//               title={book.title}\n//               author={book.author_name ? book.author_name[0] : \"Unknown Author\"}\n//               price={Math.floor(Math.random() * 30) + 10}\n//             />\n//           ))}\n//         </section>\n\n//       )}\n//     </main>\n//   );\n// };\n\n// export default Books;\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1); // 👈 текущая страница\n\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const query = params.get(\"search\") || \"all\";\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetch(`https://openlibrary.org/search.json?q=${query}&page=${page}`).then(res => res.json()).then(data => {\n      setBooks(data.docs);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [query, page]); // 👈 добавляем page\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"books-page\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"books-grid\",\n        children: books.slice(0, 20).map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n          image: book.cover_i ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg` : \"https://via.placeholder.com/150x220?text=No+Cover\",\n          rating: Math.floor(Math.random() * 5) + 1,\n          title: book.title,\n          author: book.author_name ? book.author_name[0] : \"Unknown Author\",\n          price: Math.floor(Math.random() * 30) + 10\n        }, book.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(page - 1),\n          disabled: page === 1,\n          className: \"btn\",\n          children: \"\\u25C0 Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(page + 1),\n          className: \"btn\",\n          children: \"Next \\u25B6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"urxb/YVOrlmvf22kJvtTjOm60e0=\", false, function () {\n  return [useLocation];\n});\n_c = Books;\nexport default Books;\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\"; \n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const results = data.docs.slice(0, 5).map((book) => ({\n//           id: book.key,\n//           title: book.title,\n//           author: book.author_name ? book.author_name[0] : \"Unknown Author\",\n//           cover: book.cover_i\n//             ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//             : \"https://via.placeholder.com/150x220?text=No+Cover\",\n//           price: (Math.random() * (30 - 10) + 10).toFixed(2),\n//           rating: Math.floor(Math.random() * 5) + 1,\n//         }));\n//         setBooks(results);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   if (loading) return <p className=\"loading\">Loading books...</p>;\n//   if (error) return <p className=\"error\">Error: {error}</p>;\n\n//   return (\n//     <main className=\"books-page\">\n//       <div className=\"books\">\n//         {books.map((book) => (\n//           <BookCard\n//             key={book.id}\n//             image={book.cover}\n//             rating={book.rating}\n//             title={book.title}\n//             author={book.author}\n//             price={book.price}\n//           />\n//         ))}\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","BookCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Books","_s","books","setBooks","loading","setLoading","error","setError","page","setPage","location","params","URLSearchParams","search","query","get","fetch","then","res","json","data","docs","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","book","image","cover_i","rating","Math","floor","random","title","author","author_name","price","key","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/alnura/Desktop/My Projects/bookstore/src/pages/books/Books.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n// import './style.css';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\";\n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setBooks(data.docs);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   return (\n//     <main className=\"books-page\">\n//       {loading ? (\n//         <div className=\"loader\"></div>\n//       ) : error ? (\n//         <p className=\"error\">Error: {error}</p>\n//       ) : (\n//         <section className=\"books-grid\">\n//           {books.slice(0, 20).map((book) => (\n//             <BookCard\n//               key={book.key}\n//               image={\n//                 book.cover_i\n//                   ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//                   : \"https://via.placeholder.com/150x220?text=No+Cover\"\n//               }\n//               rating={Math.floor(Math.random() * 5) + 1}\n//               title={book.title}\n//               author={book.author_name ? book.author_name[0] : \"Unknown Author\"}\n//               price={Math.floor(Math.random() * 30) + 10}\n//             />\n//           ))}\n//         </section>\n\n        \n//       )}\n//     </main>\n//   );\n// };\n\n// export default Books;\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport BookCard from '../../components/bookcard/BookCard';\nimport './style.css';\n\nconst Books = () => {\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1); // 👈 текущая страница\n\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const query = params.get(\"search\") || \"all\";\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    fetch(`https://openlibrary.org/search.json?q=${query}&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setBooks(data.docs);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, [query, page]); // 👈 добавляем page\n\n  return (\n    <main className=\"books-page\">\n      {loading ? (\n        <div className=\"loader\"></div>\n      ) : error ? (\n        <p className=\"error\">Error: {error}</p>\n      ) : (\n        <>\n          <section className=\"books-grid\">\n            {books.slice(0, 20).map((book) => (\n              <BookCard\n                key={book.key}\n                image={\n                  book.cover_i\n                    ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n                    : \"https://via.placeholder.com/150x220?text=No+Cover\"\n                }\n                rating={Math.floor(Math.random() * 5) + 1}\n                title={book.title}\n                author={book.author_name ? book.author_name[0] : \"Unknown Author\"}\n                price={Math.floor(Math.random() * 30) + 10}\n              />\n            ))}\n          </section>\n\n          {/* 🔽 Кнопки пагинации */}\n          <div className=\"pagination\">\n            <button\n              onClick={() => setPage(page - 1)}\n              disabled={page === 1}\n              className=\"btn\"\n            >\n              ◀ Prev\n            </button>\n            <span>Page {page}</span>\n            <button\n              onClick={() => setPage(page + 1)}\n              className=\"btn\"\n            >\n              Next ▶\n            </button>\n          </div>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Books;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from \"react-router-dom\";\n// import BookCard from '../../components/bookcard/BookCard';\n\n// const Books = () => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const query = params.get(\"search\") || \"all\"; \n\n//   useEffect(() => {\n//     setLoading(true);\n//     setError(null);\n\n//     fetch(`https://openlibrary.org/search.json?q=${query}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const results = data.docs.slice(0, 5).map((book) => ({\n//           id: book.key,\n//           title: book.title,\n//           author: book.author_name ? book.author_name[0] : \"Unknown Author\",\n//           cover: book.cover_i\n//             ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`\n//             : \"https://via.placeholder.com/150x220?text=No+Cover\",\n//           price: (Math.random() * (30 - 10) + 10).toFixed(2),\n//           rating: Math.floor(Math.random() * 5) + 1,\n//         }));\n//         setBooks(results);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, [query]);\n\n//   if (loading) return <p className=\"loading\">Loading books...</p>;\n//   if (error) return <p className=\"error\">Error: {error}</p>;\n\n//   return (\n//     <main className=\"books-page\">\n//       <div className=\"books\">\n//         {books.map((book) => (\n//           <BookCard\n//             key={book.id}\n//             image={book.cover}\n//             rating={book.rating}\n//             title={book.title}\n//             author={book.author}\n//             price={book.price}\n//           />\n//         ))}\n//       </div>\n//     </main>\n//   );\n// };\n\n// export default Books;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}