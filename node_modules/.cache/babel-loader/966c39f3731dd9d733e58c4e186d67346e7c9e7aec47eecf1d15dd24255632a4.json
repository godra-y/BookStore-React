{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// import './style.css';\n\n// import starIcon from './../../img/icons/star.svg';\n// import likeIcon from './../../img/icons/like.svg';\n// import likeFilledIcon from './../../img/icons/like-filled.svg';\n\n// const BookCard = ({ image, rating = 4, title, author, price }) => {\n//     const [liked, setLiked] = useState(false);\n//     const [inCart, setInCart] = useState(false);\n\n//     const stars = Array.from({ length: 5 }, (_, index) => (\n//         <img\n//         key={index}\n//         src={starIcon}\n//         alt=\"star\"\n//         className={`book-card__star ${index < rating ? 'filled' : 'empty'}`}\n//         />\n//     ));\n\n//     useEffect(() => {\n//         const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n//         const isLiked = saved.some((book) => book.title === title);\n//         setLiked(isLiked);\n//     }, [title]);\n\n//     // const toggleLike = () => {\n//     //     setLiked(prev => !prev);\n//     // };\n\n//     const toggleLike = () => {\n//         const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n//         let updated;\n\n//         if (liked) {\n//             updated = saved.filter((book) => book.title !== title);\n//         } \n//         else {\n//             const exists = saved.some((book) => book.title === title);\n//             if (!exists) {\n//                 updated = [...saved, { image, rating, title, author, price }];\n//             } \n//             else {\n//                 updated = saved;\n//             }\n//         }\n\n//         localStorage.setItem('favorites', JSON.stringify(updated));\n//         setLiked(!liked);\n\n//         window.dispatchEvent(new Event('favoritesUpdated'));\n//     };\n\n//     const toggleCart = () => {\n//         const saved = JSON.parse(localStorage.getItem('cart')) || [];\n//         let updated;\n\n//         if (inCart) {\n//             updated = saved.filter((book) => book.title !== title);\n//         } else {\n//             const exists = saved.some((book) => book.title === title);\n//             if (!exists) updated = [...saved, { image, rating, title, author, price }];\n//             else updated = saved;\n//         }\n\n//         localStorage.setItem('cart', JSON.stringify(updated));\n//         setInCart(!inCart);\n//         window.dispatchEvent(new Event('cartUpdated'));\n//     };\n\n//     return (\n//         <div className=\"book-card\">\n//             <img src={image} alt={title} className=\"book-card__image\" />\n//             <div className=\"book-card__rating\">{stars}</div>\n//             <h4 className=\"book-card__title\">{title}</h4>\n//             <p className=\"book-card__author\">{author}</p>\n//             <p className=\"book-card__price\">${price}</p>\n\n//             <div className=\"book-card__actions\">\n//                 <button\n//                     className={`book-card__btn ${inCart ? 'in-cart' : ''}`}\n//                     onClick={toggleCart}\n//                 >\n//                     {inCart ? 'Added to bag' : 'Add to bag'}\n//                 </button>\n//                 {/* <button className=\"book-card__btn\">Add to bag</button> */}\n//                 <img\n//                     src={liked ? likeFilledIcon : likeIcon}\n//                     alt=\"like\"\n//                     className=\"book-card__like\"\n//                     onClick={toggleLike}\n//                 />\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default BookCard;","map":{"version":3,"names":[],"sources":["/Users/alnura/Desktop/My Projects/bookstore/src/components/bookcard/BookCard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// import './style.css';\n\n// import starIcon from './../../img/icons/star.svg';\n// import likeIcon from './../../img/icons/like.svg';\n// import likeFilledIcon from './../../img/icons/like-filled.svg';\n\n// const BookCard = ({ image, rating = 4, title, author, price }) => {\n//     const [liked, setLiked] = useState(false);\n//     const [inCart, setInCart] = useState(false);\n\n//     const stars = Array.from({ length: 5 }, (_, index) => (\n//         <img\n//         key={index}\n//         src={starIcon}\n//         alt=\"star\"\n//         className={`book-card__star ${index < rating ? 'filled' : 'empty'}`}\n//         />\n//     ));\n\n//     useEffect(() => {\n//         const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n//         const isLiked = saved.some((book) => book.title === title);\n//         setLiked(isLiked);\n//     }, [title]);\n\n\n//     // const toggleLike = () => {\n//     //     setLiked(prev => !prev);\n//     // };\n\n//     const toggleLike = () => {\n//         const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n//         let updated;\n\n//         if (liked) {\n//             updated = saved.filter((book) => book.title !== title);\n//         } \n//         else {\n//             const exists = saved.some((book) => book.title === title);\n//             if (!exists) {\n//                 updated = [...saved, { image, rating, title, author, price }];\n//             } \n//             else {\n//                 updated = saved;\n//             }\n//         }\n\n//         localStorage.setItem('favorites', JSON.stringify(updated));\n//         setLiked(!liked);\n\n//         window.dispatchEvent(new Event('favoritesUpdated'));\n//     };\n\n//     const toggleCart = () => {\n//         const saved = JSON.parse(localStorage.getItem('cart')) || [];\n//         let updated;\n\n//         if (inCart) {\n//             updated = saved.filter((book) => book.title !== title);\n//         } else {\n//             const exists = saved.some((book) => book.title === title);\n//             if (!exists) updated = [...saved, { image, rating, title, author, price }];\n//             else updated = saved;\n//         }\n\n//         localStorage.setItem('cart', JSON.stringify(updated));\n//         setInCart(!inCart);\n//         window.dispatchEvent(new Event('cartUpdated'));\n//     };\n\n//     return (\n//         <div className=\"book-card\">\n//             <img src={image} alt={title} className=\"book-card__image\" />\n//             <div className=\"book-card__rating\">{stars}</div>\n//             <h4 className=\"book-card__title\">{title}</h4>\n//             <p className=\"book-card__author\">{author}</p>\n//             <p className=\"book-card__price\">${price}</p>\n\n//             <div className=\"book-card__actions\">\n//                 <button\n//                     className={`book-card__btn ${inCart ? 'in-cart' : ''}`}\n//                     onClick={toggleCart}\n//                 >\n//                     {inCart ? 'Added to bag' : 'Add to bag'}\n//                 </button>\n//                 {/* <button className=\"book-card__btn\">Add to bag</button> */}\n//                 <img\n//                     src={liked ? likeFilledIcon : likeIcon}\n//                     alt=\"like\"\n//                     className=\"book-card__like\"\n//                     onClick={toggleLike}\n//                 />\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default BookCard;\n\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}